{"remainingRequest":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/babel-loader/lib/index.js!/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/eslint-loader/index.js??ref--13-0!/home/derek/workspace/VueJsProjects/FinanceAndInvestment/src/storage/models/terms.js","dependencies":[{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/src/storage/models/terms.js","mtime":1648211896351},{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/cache-loader/dist/cjs.js","mtime":1648211921485},{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/babel-loader/lib/index.js","mtime":1648211921821},{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/eslint-loader/index.js","mtime":1648211921529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/derek/workspace/VueJsProjects/FinanceAndInvestment/src/storage/models/terms.js"],"names":["Settings","state","groups","gottenGroups","filtrateValue","terms","termDescriptions","isLoad","mutations","changeIsLoad","addGroupTerms","addToGottenGroup","lastGroupName","push","changeIsFull","groupName","i","length","name","isFull","filtrateTerms","addToTermDescription","newTermDescription","j","english_name","term_name_eng","desc","term_explanation_ru","removeFromTermDescription","termDescription","setShowTerm","isShow","hideTerms","actions","initGroupTerms","context","payload","commit","path","API_HOST","API_VERSION","API_TERM_PATH","lookedTerms","JSON","parse","localStorage","getItem","group","lastIndexOf","fetch","headers","API_REQUEST_HEADER","json","response","map","term","term_name_ru","addDescription","setItem","stringify","API_TERM_DESC_PATH","getters","getGroups","getGroupTerms","filter","toLocaleLowerCase","slice","sort","first","second","getTermDescriptions","getIsLoad","getIsBlur","window","mobileCheck"],"mappings":"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","sourcesContent":["import Settings from '@/settings'\n\nexport default {\n    state: () => ({\n        groups:  ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т',\n            'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Э', 'Ю', 'Я', '!'],\n        gottenGroups: [],\n        filtrateValue: '',\n        terms: [],\n        termDescriptions: [],\n        isLoad: false,\n    }),\n    mutations: {\n        changeIsLoad(state) {\n            state.isLoad = !state.isLoad\n        },\n        addGroupTerms(state, terms) {\n            state.terms = [...state.terms, ...terms]\n        },\n        addToGottenGroup(state, lastGroupName) {\n            state.gottenGroups.push(lastGroupName);\n        },\n        changeIsFull(state, groupName){\n            for (let i = 0; i < state.terms.length; i++) {\n                if(state.terms[i].name === groupName){\n                    state.terms[i].isFull = !state.terms[i].isFull;\n                    break;\n                }\n            }\n        },\n        filtrateTerms(state, filtrateValue){\n            state.filtrateValue = filtrateValue;\n        },\n        addToTermDescription(state, newTermDescription) {\n            for (let i = 0; i < state.terms.length; i++) {\n                for (let j = 0; j < state.terms[i].terms.length; j++) {\n                    if(state.terms[i].terms[j].english_name === newTermDescription.term_name_eng) {\n                        state.terms[i].terms[j].desc = newTermDescription.term_explanation_ru;\n                        state.terms[i].terms[j].isFull = !state.terms[i].terms[j].isFull;\n                        break;\n                    }\n                }\n            }\n        },\n        removeFromTermDescription(state, termDescription) {\n            for (let i = 0; i < state.terms.length; i++) {\n                for (let j = 0; j < state.terms[i].terms.length; j++) {\n                    if(state.terms[i].terms[j].english_name === termDescription.english_name) {\n                        state.terms[i].terms[j].isFull = false;\n                        break;\n                    }\n                }\n            }\n        },\n        setShowTerm (state, name){\n            for (let i = 0; i < state.terms.length; i++) {\n                for (let j = 0; j < state.terms[i].terms.length; j++) {\n                    if(state.terms[i].terms[j].name === name) {\n                        state.terms[i].terms[j].isShow = true;\n                        break;\n                    }\n                }\n            }\n        },\n        hideTerms (state){\n            for (let i = 0; i < state.terms.length; i++) {\n                for (let j = 0; j < state.terms[i].terms.length; j++) {\n                    state.terms[i].terms[j].isFull = false;\n                }\n            }\n        }\n    },\n    actions: {\n        async initGroupTerms(context, payload) {\n            context.commit('changeIsLoad');\n            let terms = [], path = Settings.API_HOST + Settings.API_VERSION + Settings.API_TERM_PATH;\n            let lookedTerms = JSON.parse(localStorage.getItem(\"lookedTerms\") || '[]');\n            for (const group of context.state.groups) {\n                if(context.state.gottenGroups.lastIndexOf(group) !== -1) continue;\n                if(group === payload.lastGroupName) break;\n                context.commit('addToGottenGroup', group)\n                let response = await (await fetch(path + group, {headers: Settings.API_REQUEST_HEADER})).json();\n                terms.push({\n                    name: group,\n                    isFull: false,\n                    terms: response.map(function (term){\n                        return {\n                            english_name: term.term_name_eng,\n                            name: term.term_name_ru,\n                            isShow: lookedTerms.lastIndexOf(term.term_name_ru) !== -1,\n                            isFull: false, desc: ''\n                        }\n                    }),\n                });\n            }\n            context.commit('addGroupTerms', terms);\n            context.commit('changeIsLoad');\n        },\n\n        async addDescription(context, payload) {\n            let lookedTerms = JSON.parse(localStorage.getItem(\"lookedTerms\") || '[]');\n            lookedTerms.push(payload.name);\n            localStorage.setItem('lookedTerms', JSON.stringify(lookedTerms));\n            context.commit('setShowTerm', payload.name);\n\n            let path = Settings.API_HOST + Settings.API_VERSION + Settings.API_TERM_DESC_PATH;\n            let response = await (await fetch(path + payload.name, {headers: Settings.API_REQUEST_HEADER})).json();\n            context.commit('addToTermDescription', response[0]);\n        }\n    },\n    getters: {\n        getGroups (state) {\n            return state.groups\n        },\n        getGroupTerms (state){\n            return state.terms.map(function (group){\n                let terms = group.terms;\n                if(state.filtrateValue){\n                    terms = terms.filter(function (term){\n                        return term.name.toLocaleLowerCase().lastIndexOf(state.filtrateValue.toLocaleLowerCase()) !== -1\n                            || term.english_name.toLocaleLowerCase().lastIndexOf(state.filtrateValue.toLocaleLowerCase()) !== -1;\n                    })\n                }\n                return {\n                    name: group.name,\n                    isFull:  group.isFull,\n                    terms: group.isFull ? terms : terms.slice(0, 12),\n                };\n            }).sort(function(first, second){\n                if(first.name < second.name) { return -1; }\n                if(first.name > second.name) { return 1; }\n                return 0;\n            });\n        },\n        getTermDescriptions(state){\n            return state.termDescriptions;\n        },\n        getIsLoad(state){\n            return state.isLoad;\n        },\n        getIsBlur(state){\n            if(window.mobileCheck()) {\n                for (let i = 0; i < state.terms.length; i++) {\n                    for (let j = 0; j < state.terms[i].terms.length; j++) {\n                        if (state.terms[i].terms[j].isFull) {\n                            return true\n                        }\n                    }\n                }\n            }\n            return false\n        }\n    },\n}"]}]}