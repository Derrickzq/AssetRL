{"remainingRequest":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/derek/workspace/VueJsProjects/FinanceAndInvestment/src/components/Layoyt/Header.vue?vue&type=template&id=0332e636&scoped=true&","dependencies":[{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/src/components/Layoyt/Header.vue","mtime":1648669975855},{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/cache-loader/dist/cjs.js","mtime":1648211921485},{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1648211922113},{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/cache-loader/dist/cjs.js","mtime":1648211921485},{"path":"/home/derek/workspace/VueJsProjects/FinanceAndInvestment/node_modules/vue-loader/lib/index.js","mtime":1648211921961}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}